/*
THIS IS A GENERATED/BUNDLED FILE BY ESBUILD
if you want to view the source, please visit the github repository of this plugin
*/

var l=Object.defineProperty;var c=Object.getOwnPropertyDescriptor;var p=Object.getOwnPropertyNames;var g=Object.prototype.hasOwnProperty;var h=(a,e)=>{for(var t in e)l(a,t,{get:e[t],enumerable:!0})},f=(a,e,t,i)=>{if(e&&typeof e=="object"||typeof e=="function")for(let s of p(e))!g.call(a,s)&&s!==t&&l(a,s,{get:()=>e[s],enumerable:!(i=c(e,s))||i.enumerable});return a};var m=a=>f(l({},"__esModule",{value:!0}),a);var b={};h(b,{default:()=>n});module.exports=m(b);var d=require("obsidian"),r=require("@codemirror/state"),o=require("@codemirror/view"),v=o.Decoration.mark({class:"privacy-mode-reveal"}),y=r.StateField.define({create(){return o.Decoration.none},update(a,e){if(!e.selection||!e.selection.eq(e.startState.selection)||e.docChanged){let t=new r.RangeSetBuilder,i=e.state.selection;for(let s of i.ranges)s.empty||t.add(s.from,s.to,v);return t.finish()}return a.map(e.changes)},provide:a=>o.EditorView.decorations.from(a)}),S={enabled:!1},n=class extends d.Plugin{async onload(){await this.loadSettings(),this.applyPrivacyModeClass(this.settings.enabled),this.registerEditorExtension(y),this.addCommand({id:"enable-privacy-mode",name:"Enable",checkCallback:t=>this.settings.enabled?!1:(t||(this.settings.enabled=!0,this.applyPrivacyModeClass(!0),this.saveSettings()),!0)}),this.addCommand({id:"disable-privacy-mode",name:"Disable",checkCallback:t=>this.settings.enabled?(t||(this.settings.enabled=!1,this.applyPrivacyModeClass(!1),this.saveSettings()),!0):!1})}onunload(){this.applyPrivacyModeClass(!1)}applyPrivacyModeClass(t){this.app.workspace.containerEl.toggleClass("privacy-mode-enabled",t)}async loadSettings(){this.settings=Object.assign({},S,await this.loadData())}async saveSettings(){await this.saveData(this.settings)}};
